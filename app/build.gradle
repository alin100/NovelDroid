import groovy.swing.SwingBuilder

apply plugin: 'com.android.application'

android {
    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    defaultConfig {
        applicationId "com.sh1r0.noveldroid"
        minSdkVersion 10
        targetSdkVersion 20
        versionCode 51
        versionName "1.4.1"
    }

    signingConfigs {
        release {
            storeFile file('noveldroid.keystore')
            storePassword ""
            keyAlias "release"
            keyPassword ""
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile files('libs/Parse-1.3.9.jar')
    compile project(':libs:ExFilePicker')
    compile 'com.android.support:appcompat-v7:20.+'
    compile 'com.android.support:support-v4:20.+'
    compile 'com.github.dmytrodanylyk.android-process-button:library:1.0.0'
    compile 'org.jsoup:jsoup:1.7.3'
    compile 'com.squareup:otto:1.3.5'
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':app:assembleRelease')) {
        def storepass = ''
        def keypass = ''
        if (System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true, //Otherwise the build will continue running
                        title: 'Enter password', //Dialog title
                        alwaysOnTop: true,
                        resizable: false,
                        locationRelativeTo: null, //Place dialog in center of the screen
                        pack: true, //We need to pack the dialog (so it will take the size of its children
                        show: true
                ) {
                    vbox { //Put everything below each other
                        label(text: "Keystore password:")
                        input1 = passwordField()
                        label(text: "Key password:")
                        input2 = passwordField()
                        button(defaultButton: true, text: 'OK', actionPerformed: {
                            storepass = new String(input1.password);
                            keypass = new String(input2.password);
                            dispose();
                        })
                    }
                }
            }
        } else {
            storepass = new String(System.console().readPassword("\nKeystore password: "))
            keypass = new String(System.console().readPassword("\nKey password: "))
        }

        if (storepass.size() <= 0 || keypass.size() <= 0) {
            throw new InvalidUserDataException("You must enter a password to proceed.")
        }

        android.signingConfigs.release.storePassword = storepass
        android.signingConfigs.release.keyPassword = keypass
    }
}
